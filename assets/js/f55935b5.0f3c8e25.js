"use strict";(self.webpackChunklabtutorial=self.webpackChunklabtutorial||[]).push([[281],{5680:(e,t,a)=>{a.d(t,{xA:()=>p,yg:()=>m});var n=a(6540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},g="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),g=d(a),c=r,m=g["".concat(s,".").concat(c)]||g[c]||u[c]||i;return a?n.createElement(m,o(o({ref:t},p),{},{components:a})):n.createElement(m,o({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[g]="string"==typeof e?e:r,o[1]=l;for(var d=2;d<i;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},9365:(e,t,a)=>{a.d(t,{A:()=>o});var n=a(6540),r=a(53);const i={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,o),hidden:a},t)}},1470:(e,t,a)=>{a.d(t,{A:()=>N});var n=a(8168),r=a(6540),i=a(53),o=a(3104),l=a(6347),s=a(7485),d=a(1682),p=a(9466);function g(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function u(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??g(a);return function(e){const t=(0,d.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function c(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:a}=e;const n=(0,l.W6)(),i=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s.aZ)(i),(0,r.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(n.location.search);t.set(i,e),n.replace({...n.location,search:t.toString()})}),[i,n])]}function y(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,i=u(e),[o,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!c({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:i}))),[s,d]=m({queryString:a,groupId:n}),[g,y]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,i]=(0,p.Dv)(a);return[n,(0,r.useCallback)((e=>{a&&i.set(e)}),[a,i])]}({groupId:n}),f=(()=>{const e=s??g;return c({value:e,tabValues:i})?e:null})();(0,r.useLayoutEffect)((()=>{f&&l(f)}),[f]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!c({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),y(e)}),[d,y,i]),tabValues:i}}var f=a(2303);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:t,block:a,selectedValue:l,selectValue:s,tabValues:d}=e;const p=[],{blockElementScrollPositionUntilNextRender:g}=(0,o.a_)(),u=e=>{const t=e.currentTarget,a=p.indexOf(t),n=d[a].value;n!==l&&(g(t),s(n))},c=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const a=p.indexOf(e.currentTarget)+1;t=p[a]??p[0];break}case"ArrowLeft":{const a=p.indexOf(e.currentTarget)-1;t=p[a]??p[p.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":a},t)},d.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.A)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>p.push(e),onKeyDown:c,onClick:u},o,{className:(0,i.A)("tabs__item",h.tabItem,o?.className,{"tabs__item--active":l===t})}),a??t)})))}function w(e){let{lazy:t,children:a,selectedValue:n}=e;const i=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function v(e){const t=y(e);return r.createElement("div",{className:(0,i.A)("tabs-container",h.tabList)},r.createElement(b,(0,n.A)({},e,t)),r.createElement(w,(0,n.A)({},e,t)))}function N(e){const t=(0,f.A)();return r.createElement(v,(0,n.A)({key:String(t)},e))}},8913:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>g,contentTitle:()=>d,default:()=>y,frontMatter:()=>s,metadata:()=>p,toc:()=>u});var n=a(8168),r=(a(6540),a(5680)),i=a(1470),o=a(9365),l=a(5489);const s={id:"peakcalling-tutorial",title:"ChIP-exo Peak Calling Tutorial",sidebar_label:"ChIP-exo Peak Calling"},d=void 0,p={unversionedId:"Software/peakcalling-tutorial",id:"Software/peakcalling-tutorial",title:"ChIP-exo Peak Calling Tutorial",description:"Generate peak calling frequency plots from ChIP-exo data",source:"@site/docs/Software/chipexo-peak-calling.md",sourceDirName:"Software",slug:"/Software/peakcalling-tutorial",permalink:"/labtutorial/Software/peakcalling-tutorial",draft:!1,tags:[],version:"current",lastUpdatedBy:"Olivia Wen-Mei Lang",lastUpdatedAt:1724095888,formattedLastUpdatedAt:"Aug 19, 2024",frontMatter:{id:"peakcalling-tutorial",title:"ChIP-exo Peak Calling Tutorial",sidebar_label:"ChIP-exo Peak Calling"},sidebar:"softwareSidebar",previous:{title:"Contributors",permalink:"/labtutorial/Software/contributers"}},g={},u=[{value:"Download ScriptManager (v0.14):",id:"download-scriptmanager-v014",level:2},{value:"Download Python Scripts",id:"download-python-scripts",level:2},{value:"(Optional) Download USCS binary <code>bedGraphToBigWig</code>",id:"optional-download-uscs-binary-bedgraphtobigwig",level:2},{value:"Download Data",id:"download-data",level:2},{value:"BAM File",id:"bam-file",level:3},{value:"(Optional) XXXX.chrom.sizes Reference File",id:"optional-xxxxchromsizes-reference-file",level:3},{value:"Convert BAM File to scIDX Format",id:"convert-bam-file-to-scidx-format",level:2},{value:"1. Open ScriptManager",id:"1-open-scriptmanager",level:3},{value:"2. Generate BAI index file",id:"2-generate-bai-index-file",level:3},{value:"2.1. Navigate to BAM Manipulation \u27a1\ufe0f BAM-BAI Indexer",id:"21-navigate-to-bam-manipulation-\ufe0f-bam-bai-indexer",level:4},{value:"2.2. Generate BAI index files for each BAM file of interest by loading your BAM file and clicking &quot;Index.&quot;",id:"22-generate-bai-index-files-for-each-bam-file-of-interest-by-loading-your-bam-file-and-clicking-index",level:4},{value:"3. Create a whole-genome pileup using BAM Format Converter Tools",id:"3-create-a-whole-genome-pileup-using-bam-format-converter-tools",level:3},{value:"2.1. Navigate to BAM Format Converter \u27a1\ufe0f BAM to scIDX to do a genome-wide pileup of your BAM",id:"21-navigate-to-bam-format-converter-\ufe0f-bam-to-scidx-to-do-a-genome-wide-pileup-of-your-bam",level:4},{value:"2.2. Select Encoding information",id:"22-select-encoding-information",level:4},{value:"2.3. Execute pileup",id:"23-execute-pileup",level:4},{value:"GeneTrack Script",id:"genetrack-script",level:2},{value:"Output Options",id:"output-options",level:3},{value:"CWPair Script",id:"cwpair-script",level:2},{value:"Output Options",id:"output-options-1",level:3},{value:"(Optional) View Pileup in Genome Browser",id:"optional-view-pileup-in-genome-browser",level:2},{value:"Convert scIDX to BigWig",id:"convert-scidx-to-bigwig",level:3},{value:"1. Turn your scIDX file into a bedGraph file",id:"1-turn-your-scidx-file-into-a-bedgraph-file",level:4},{value:"2. Turn your bedGraph file into a BigWig file",id:"2-turn-your-bedgraph-file-into-a-bigwig-file",level:4},{value:"3. Load the BigWig into your favorite genome browser",id:"3-load-the-bigwig-into-your-favorite-genome-browser",level:4},{value:"Command-Line shell script",id:"command-line-shell-script",level:2}],c={toc:u},m="wrapper";function y(e){let{components:t,...s}=e;return(0,r.yg)(m,(0,n.A)({},c,s,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,(0,r.yg)("em",{parentName:"p"},"Generate peak calling frequency plots from ChIP-exo data")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Goal:")," This tutorial provides a guide to performing a peak calling analysis using the ScriptManager platform and data generated by the ",(0,r.yg)("a",{parentName:"p",href:"http://www.yeastepigenome.org/"},"Yeast Epigenome project"),"."),(0,r.yg)("h2",{id:"download-scriptmanager-v014"},"Download ScriptManager (v0.14):"),(0,r.yg)("p",null,"The current version of ScriptManager is available for download ",(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("a",{parentName:"strong",href:"https://github.com/CEGRcode/scriptmanager/releases/download/v0.14/ScriptManager-v0.14.jar"},"here")),". Make sure you have ",(0,r.yg)("a",{parentName:"p",href:"http://pughlab.mbg.cornell.edu/scriptmanager-docs/docs/#java"},"Java installed"),"."),(0,r.yg)("p",null,"The file ",(0,r.yg)("inlineCode",{parentName:"p"},"ScriptManager-v0.14.jar")," should be placed someplace locally accessible. For example on Mac OS on the Desktop (Permissions will need to be accepted) or someplace in your home directory (",(0,r.yg)("inlineCode",{parentName:"p"},"Macintosh_HD:Users/userID/ScriptManager"),")"),(0,r.yg)("h2",{id:"download-python-scripts"},"Download Python Scripts"),(0,r.yg)("p",null,"This tutorial will use Python scripts GeneTrack and CWPair. Make sure you have Python installed."),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)(l.A,{className:"button button--secondary",href:"ftp://data1.commons.psu.edu/pub/commons/eberly/pughlab/yeast-epigenome-project/12141_YEP.zip",mdxType:"Link"},"Download GeneTrack script")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)(l.A,{className:"button button--secondary",href:"ftp://data1.commons.psu.edu/pub/commons/eberly/pughlab/yeast-epigenome-project/12141_YEP.zip",mdxType:"Link"},"Download CWPair script"))),(0,r.yg)("h2",{id:"optional-download-uscs-binary-bedgraphtobigwig"},"(Optional) Download USCS binary ",(0,r.yg)("inlineCode",{parentName:"h2"},"bedGraphToBigWig")),(0,r.yg)("p",null,"You will need to download the precompiled binary for converting bedGraphs to BigWig files. Navigate to ",(0,r.yg)("a",{parentName:"p",href:"https://hgdownload.soe.ucsc.edu/admin/exe/"},"UCSC executables FTP"),". Click the link to the OS that matches your machine and scroll down to download the ",(0,r.yg)("inlineCode",{parentName:"p"},"bedGraphToBigWig")," binary."),(0,r.yg)(i.A,{mdxType:"Tabs"},(0,r.yg)(o.A,{value:"linux-macos",label:"Linux/MacOS",default:!0,mdxType:"TabItem"},(0,r.yg)("p",null,"Make sure you modify the permissions so that you can execute the binary. You can do this with ",(0,r.yg)("inlineCode",{parentName:"p"},"chmod")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"chmod 755 /path/to/bedGraphToBigWig\n")),(0,r.yg)("p",null,"For example, if your ",(0,r.yg)("inlineCode",{parentName:"p"},"bedGraphToBigWig")," binary downloaded to your ",(0,r.yg)("inlineCode",{parentName:"p"},"Downloads")," folder,"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"chmod 755 ~/Downloads/bedGraphToBigWig\n")))),(0,r.yg)("h2",{id:"download-data"},"Download Data"),(0,r.yg)("p",null,"You need one set of aligned DNA fragments (BAM) to complete this exercise. ",(0,r.yg)("a",{parentName:"p",href:"http://pughlab.mbg.cornell.edu/scriptmanager-docs/docs/References/file-formats"},"Read more about the BED/BAM file formats here.")),(0,r.yg)("h3",{id:"bam-file"},"BAM File"),(0,r.yg)("p",null,"This is the set of Reb1 read alignments from the Yeast Epigenome Project (YEP). ",(0,r.yg)("a",{parentName:"p",href:"https://pubmed.ncbi.nlm.nih.gov/33692541/"},"See Rossi et al (2021)")," for more details."),(0,r.yg)("div",{class:"tutorial-img-flow-container"},(0,r.yg)("img",{src:a(7781).A,style:{width:"60%"}})),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"Navigate to ",(0,r.yg)("a",{parentName:"li",href:"http://www.yeastepigenome.org/"},"www.yeastepigenome.org")," and search for Reb1"),(0,r.yg)("li",{parentName:"ol"},'Select "META DATA"'),(0,r.yg)("li",{parentName:"ol"},'Select "Direct Download"'),(0,r.yg)("li",{parentName:"ol"},"Unzip the resulting file \u201812141_YEP.zip\u2019 and inspect the contents of the new ",(0,r.yg)("inlineCode",{parentName:"li"},"12141_YEP")," folder. It should contain a file called ",(0,r.yg)("inlineCode",{parentName:"li"},"12141_filtered.bam"),".")),(0,r.yg)("div",{class:"tutorial-img-flow-container"},(0,r.yg)("img",{src:a(6048).A,style:{width:"50%"}}),(0,r.yg)("img",{src:a(584).A,style:{width:"50%"}})),(0,r.yg)("h3",{id:"optional-xxxxchromsizes-reference-file"},"(Optional) XXXX.chrom.sizes Reference File"),(0,r.yg)("p",null,"You will also need the chromosome sizes file of the yeast reference genome (sacCer3):"),(0,r.yg)(l.A,{className:"button button--secondary",href:"https://hgdownload.soe.ucsc.edu/goldenPath/sacCer3/bigZips/sacCer3.chrom.sizes",mdxType:"Link"},"Download sacCer3.chrom.sizes (TXT)"),(0,r.yg)("br",null),(0,r.yg)("br",null),(0,r.yg)("admonition",{type:"warning"},(0,r.yg)("p",{parentName:"admonition"},"The downloaded sacCer3.chrom.sizes file may be using the roman numeral naming system (",(0,r.yg)("inlineCode",{parentName:"p"},"chrI chrII chrIII ..."),"). You will need to modify this to the arabic (",(0,r.yg)("inlineCode",{parentName:"p"},"chr1 chr2 chr3 ..."),") numeral naming system if you plan to use the BAM file linked above. You can do this in a simple text editor."),(0,r.yg)("p",{parentName:"admonition"},"Also, if the file is missing the ",(0,r.yg)("inlineCode",{parentName:"p"},"2-micron")," row, you will need to add it manually. Simply append the following tab-delimited row to the bottom of the ",(0,r.yg)("inlineCode",{parentName:"p"},"sacCer3.chrom.sizes")," file."),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre"},"2-micron    6318\n"))),(0,r.yg)("h2",{id:"convert-bam-file-to-scidx-format"},"Convert BAM File to scIDX Format"),(0,r.yg)("h3",{id:"1-open-scriptmanager"},"1. Open ScriptManager"),(0,r.yg)(i.A,{mdxType:"Tabs"},(0,r.yg)(o.A,{value:"macos",label:"MacOS",default:!0,mdxType:"TabItem"},(0,r.yg)("p",null,"Depending on your system permissions, you may need to be an administrator to open this for the first time. On Mac systems, this can be done by right-clicking the file and selecting \u2018Open\u2019 at the top."),(0,r.yg)("div",{class:"tutorial-img-flow-container"},(0,r.yg)("img",{src:a(9755).A,style:{width:"40%",border:"solid 1px"}})),(0,r.yg)("admonition",{type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"Some MacOS systems may not properly open the JAR by simply double-clicking on the JAR file so you may need to open your Terminal window and execute it from the command line by executing the jar file ",(0,r.yg)("em",{parentName:"p"},"without any arguments or flags"),":"),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre"},"java -jar /path/to/ScriptManager.jar\n")),(0,r.yg)("p",{parentName:"admonition"},"If you're not sure how to type the path to ScriptManager, you can type ",(0,r.yg)("inlineCode",{parentName:"p"},"java -jar ")," (end with space) and then drag ScriptManager from Finder into your Terminal window and then press enter."))),(0,r.yg)(o.A,{value:"linux",label:"Linux",mdxType:"TabItem"},(0,r.yg)("p",null,"Double-click or right-click the ScriptManager JAR file to start the program."),(0,r.yg)("div",{class:"tutorial-img-flow-container"},(0,r.yg)("img",{src:a(3196).A,style:{width:"40%",border:"solid 1px"}}))),(0,r.yg)(o.A,{value:"windows",label:"Windows",mdxType:"TabItem"},(0,r.yg)("p",null,"Double-click or right-click the ScriptManager JAR file to start the program."),(0,r.yg)("div",{class:"tutorial-img-flow-container"},(0,r.yg)("img",{src:a(3009).A,style:{width:"40%",border:"solid 1px"}})))),(0,r.yg)("p",null,"Once you see the main tool selection window, you're off to the races!"),(0,r.yg)("h3",{id:"2-generate-bai-index-file"},"2. Generate BAI index file"),(0,r.yg)("p",null,"A BAI index file is required for each BAM file of interest (i.e., the tag occupancy data you want to plot). This file allows for rapid access of the sorted and aligned sequence reads (BAM file)."),(0,r.yg)("admonition",{type:"tip"},(0,r.yg)("p",{parentName:"admonition"},"SAM/BAM standard is to keep BAI file in same directory as BAM file with the ScriptManager-generated filename."),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"Reb1_YEP_12141.bam\nReb1_YEP_12141.bam.bai  # Need to generate this file to proceed.\n"))),(0,r.yg)("h4",{id:"21-navigate-to-bam-manipulation-\ufe0f-bam-bai-indexer"},"2.1. Navigate to BAM Manipulation \u27a1\ufe0f ",(0,r.yg)("a",{parentName:"h4",href:"http://pughlab.mbg.cornell.edu/scriptmanager-docs/docs/bam-manipulation/bam-indexer"},(0,r.yg)("strong",{parentName:"a"},"BAM-BAI Indexer"))),(0,r.yg)("div",{class:"tutorial-img-flow-container"},(0,r.yg)("img",{src:a(8928).A,style:{width:"60%"}})),(0,r.yg)("h4",{id:"22-generate-bai-index-files-for-each-bam-file-of-interest-by-loading-your-bam-file-and-clicking-index"},'2.2. Generate BAI index files for each BAM file of interest by loading your BAM file and clicking "Index."'),(0,r.yg)("div",{class:"tutorial-img-flow-container"},(0,r.yg)("img",{src:a(8135).A,style:{width:"60%"}}),(0,r.yg)("i",{class:"fa-solid fa-arrow-right fa-lg"}),(0,r.yg)("img",{src:a(4939).A,style:{width:"30%"}})),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"The speed of this step scales with the size of the BAM file. Generally this step 30 sec for a 100 MB BAM file but may take 1-2 min for a multi-GB BAM file.")),(0,r.yg)("h3",{id:"3-create-a-whole-genome-pileup-using-bam-format-converter-tools"},"3. Create a whole-genome pileup using BAM Format Converter Tools"),(0,r.yg)("h4",{id:"21-navigate-to-bam-format-converter-\ufe0f-bam-to-scidx-to-do-a-genome-wide-pileup-of-your-bam"},"2.1. Navigate to BAM Format Converter \u27a1\ufe0f ",(0,r.yg)("a",{parentName:"h4",href:"http://pughlab.mbg.cornell.edu/scriptmanager-docs/docs/bam-format-converter/bam-to-scidx"},(0,r.yg)("strong",{parentName:"a"},"BAM to scIDX"))," to do a genome-wide pileup of your BAM"),(0,r.yg)("div",{class:"tutorial-img-flow-container"},(0,r.yg)("img",{src:a(975).A,style:{width:"60%"}})),(0,r.yg)("h4",{id:"22-select-encoding-information"},"2.2. Select Encoding information"),(0,r.yg)("p",null,"Since this is a ChIP-exo dataset, we will select Read 1 (5' end) for the encoding. You may select insert size filters if you wish."),(0,r.yg)("h4",{id:"23-execute-pileup"},"2.3. Execute pileup"),(0,r.yg)("div",{class:"tutorial-img-flow-container"},(0,r.yg)("img",{src:a(8432).A,style:{width:"60%"}}),(0,r.yg)("i",{class:"fa-solid fa-arrow-right fa-lg"}),(0,r.yg)("img",{src:a(9328).A,style:{width:"40%"}})),(0,r.yg)("p",null,"This should output a ",(0,r.yg)("inlineCode",{parentName:"p"},"12141_filtered_READ1.tab")," file."),(0,r.yg)("h2",{id:"genetrack-script"},"GeneTrack Script"),(0,r.yg)("p",null,"Open the terminal on your computer. Navigate to the directory with the ",(0,r.yg)("inlineCode",{parentName:"p"},"genetrack.py")," file and run the following command:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"python genetrack.py /path/to/12141_filtered_READ1.tab\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Output called peaks in GFF format")),(0,r.yg)("div",{class:"tutorial-img-flow-container"},(0,r.yg)("img",{src:a(4496).A,style:{width:"60%"}})),(0,r.yg)("p",null,"This should output a folder labeled ",(0,r.yg)("inlineCode",{parentName:"p"},"genetrack_s5e20F1")," in the directory of your scIDX file. Inside of the folder, the ",(0,r.yg)("inlineCode",{parentName:"p"},"12141_filtered_READ1_s5e20F1.gff")," file will be used for the CWPair script."),(0,r.yg)("p",null,'The GeneTrack script supports multiple input files. You can run the script using a file or list of files, a directory or list of directories, or use "." to run the script in the current directory.'),(0,r.yg)("h3",{id:"output-options"},"Output Options"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Option"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"-s=<SIGMA>")),(0,r.yg)("td",{parentName:"tr",align:null},"Sigma to use when smoothing reads to call peaks (default=5)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"-e=<EXCLUSION>")),(0,r.yg)("td",{parentName:"tr",align:null},"Exclusion zone around each peak that prevents others from being called (default=20)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"-u=<UP_WIDTH>")),(0,r.yg)("td",{parentName:"tr",align:null},"Upstream width of called peaks (default=half exclusion zone)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"-d=<DOWN_WIDTH>")),(0,r.yg)("td",{parentName:"tr",align:null},"Downstream width of called peaks (default=half exclusion zone)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"-F=<FILTER>")),(0,r.yg)("td",{parentName:"tr",align:null},"Absolute read filter; outputs only peaks with larger read count (default=1)")))),(0,r.yg)("h2",{id:"cwpair-script"},"CWPair Script"),(0,r.yg)("p",null,"Now that the GeneTrack script output has been generated, we can run the CWPair script. Navigate to the directory with the ",(0,r.yg)("inlineCode",{parentName:"p"},"cwpair.py")," file and run the following command:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"python cwpair.py /path/to/12141_filtered_READ1_s5e20F1.gff\n")),(0,r.yg)("p",null,"This should output a folder labeled ",(0,r.yg)("inlineCode",{parentName:"p"},"cwpair_output_mode_f0u50d100b1")," inside of the previous ",(0,r.yg)("inlineCode",{parentName:"p"},"genetrack_s5e20F1")," folder. This folder contains the following files:"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"S_12141_filtered_READ1_s5e20F1.gff")," (simple),"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"D_12141_filtered_READ1_s5e20F1.txt")," (detailed),"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"O_12141_filtered_READ1_s5e20F1.txt")," (orphans),"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"P_12141_filtered_READ1_s5e20F1.pdf")," (frequency preview plot),"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"F_12141_filtered_READ1_s5e20F1.pdf")," (final frequency plot),"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"statistics.txt")," (summarizes each input file)"),(0,r.yg)("div",{class:"tutorial-img-flow-container"},(0,r.yg)("img",{src:a(1353).A,style:{width:"50%"}}),(0,r.yg)("i",{class:"fa-solid fa-arrow-right fa-lg"}),(0,r.yg)("img",{src:a(1023).A,style:{width:"50%"}})),(0,r.yg)("p",null,"."),(0,r.yg)("p",null,'The CWPair script supports multiple input files. You can run the script using a file or list of file, a directory or list of directories, or use "." to run the script in the current directory.'),(0,r.yg)("h3",{id:"output-options-1"},"Output Options"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Option"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"-m=<METHOD>")),(0,r.yg)("td",{parentName:"tr",align:null},"Method of finding match. Valid options are mode (default), closest, largest, and all (run with each method)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"-u=<UP_DISTANCE>")),(0,r.yg)("td",{parentName:"tr",align:null},"Distance upstream of a Watson peak to allow a Crick pair (default=50)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"-d=<DOWN_DISTANCE>")),(0,r.yg)("td",{parentName:"tr",align:null},"Distance downstream of a Watson peak to allow a Crick pair (default=100)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"-d=<BINSIZE>")),(0,r.yg)("td",{parentName:"tr",align:null},"Width of bins for frequency plots and mode calculation (default=1)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"-F=<ABSOLUTE_THRESHOLD>")),(0,r.yg)("td",{parentName:"tr",align:null},"Absolute read filter; outputs only peaks with larger read count (default=0)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"-p=<PLOT_FORMAT>")),(0,r.yg)("td",{parentName:"tr",align:null},"Format to output graph in. Valid options are png, svg, and pdf (default)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"-o=<FORMAT>")),(0,r.yg)("td",{parentName:"tr",align:null},"Format to output simple output file in. Valid options are gff (default) and txt")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"-c=<SORT_CHROMOSOME>")),(0,r.yg)("td",{parentName:"tr",align:null},"Output files will be sorted by chromosome. Valid options are asc (default) and desc")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"-s=<SORT_SCORE>")),(0,r.yg)("td",{parentName:"tr",align:null},"Output files will be sorted by score. Valid option are asc, desc, and none (default)")))),(0,r.yg)("h2",{id:"optional-view-pileup-in-genome-browser"},"(Optional) View Pileup in Genome Browser"),(0,r.yg)("p",null,"Follow these steps to turn your BAM files into genome track files that can be viewed in a genome browser!"),(0,r.yg)("h3",{id:"convert-scidx-to-bigwig"},"Convert scIDX to BigWig"),(0,r.yg)("p",null,"Since ScriptManager currently does not support converting BedGraph files to BigWigs, this step must be done in your terminal/on the command-prompt."),(0,r.yg)("h4",{id:"1-turn-your-scidx-file-into-a-bedgraph-file"},"1. Turn your scIDX file into a bedGraph file"),(0,r.yg)(i.A,{mdxType:"Tabs"},(0,r.yg)(o.A,{value:"shell",label:"Shell",default:!0,mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"grep -v -f sacCer3.chrom.sizes 12141_filtered_READ1_SCALE.tab > 12141_filtered_READ1_SCALE.filtered.tab\nsed '1d;2d' 12141_filtered_READ1_SCALE.filtered.tab | awk '{OFS=\"\\t\"}{FS=\"\\t\"}{print $1, $2, $2+1, $3}' |sort -k1,1 -k2,2n > 12141_filtered_READ1_SCALE_forward.bedgraph\nsed '1d;2d' 12141_filtered_READ1_SCALE.filtered.tab | awk '{OFS=\"\\t\"}{FS=\"\\t\"}{print $1, $2, $2+1, $4}' |sort -k1,1 -k2,2n > 12141_filtered_READ1_SCALE_reverse.bedgraph\n"))),(0,r.yg)(o.A,{value:"excel",label:"Excel",default:!0,mdxType:"TabItem"},(0,r.yg)("p",null,"Open your file in excel and strip the file of the first two rows:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"#2023-03-10 12:52:40.439;12141_filtered.bam;READ1\nchrom   index   forward reverse value\n")),(0,r.yg)("p",null,"You may also have read mapping to the very edges of the chromosome. These entries will also have to be removed."),(0,r.yg)("p",null,"Then rearrange the columns into BedGraph format by copying them in the following order (3rd column is the value of col2 plus one):"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"12141_filtered_READ1_SCALE_forward.bedGraph"),": col1, col2, (col2 +1), col3"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"12141_filtered_READ1_SCALE_reverse.bedGraph"),": col1, col2, (col2 +1), col4")),(0,r.yg)("p",null,"...and then sort each of them by the first and then the second columns. This format is tab-delimited (not comma-delimited!) so save as a tab-delimited text file. Do not save this as an Excel file format (",(0,r.yg)("inlineCode",{parentName:"p"},".xlsx"),", ",(0,r.yg)("inlineCode",{parentName:"p"},".xls"),", etc). This should be a ",(0,r.yg)("inlineCode",{parentName:"p"},".tsv")," or ",(0,r.yg)("inlineCode",{parentName:"p"},".tab")," format."))),(0,r.yg)("h4",{id:"2-turn-your-bedgraph-file-into-a-bigwig-file"},"2. Turn your bedGraph file into a BigWig file"),(0,r.yg)(i.A,{mdxType:"Tabs"},(0,r.yg)(o.A,{value:"shell",label:"Shell",default:!0,mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"./bedGraphToBigWig 12141_filtered_READ1_SCALE_forward.bedGraph sacCer3.chrom.sizes my-track-basename_forward.bw\n./bedGraphToBigWig 12141_filtered_READ1_SCALE_reverse.bedGraph sacCer3.chrom.sizes my-track-basename_reverse.bw\n")))),(0,r.yg)("h4",{id:"3-load-the-bigwig-into-your-favorite-genome-browser"},"3. Load the BigWig into your ",(0,r.yg)("a",{parentName:"h4",href:"https://software.broadinstitute.org/software/igv/download"},"favorite genome browser")),(0,r.yg)("div",{class:"tutorial-img-flow-container"},(0,r.yg)("img",{src:a(9945).A,style:{width:"80%"}})),(0,r.yg)("p",null,"Tah dah! You've made the genome tracks for a ChIP-exo dataset!"),(0,r.yg)("h2",{id:"command-line-shell-script"},"Command-Line shell script"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"SCRIPTMANAGER=/path/to/ScriptManager.jar\nBGTOBW=/path/to/bedGraphtoBigWig\nBAMFILE=/path/to/12141_filtered.bam\nOUTPUT=/path/to/output-basename\nCHRMSZ=/path/to/sacCer3.chrom.sizes\nGENETRACK=/path/to/genetrack.py\nCWPAIR=/path/to/cwpair.py\n\n# Index BAM if not already indexed\n[ -f $BAMFILE.bai ] || samtools index $BAMFILE\n# Pileup BAM along whole genome\njava -jar $SCRIPTMANAGER bam-format-converter bam-to-scidx $BAMFILE -o $OUTPUT.tab\n\n# Run GeneTrack script\npython $GENETRACK $OUTPUT.tab\n\n# Run CWPair script\npython $CWPAIR $OUTPUT_s5e20F1.gff\n\n# (Optional) View pileup in genome browser\n\n# Only include pileups from chromosomes in the sacCer3.chrom.sizes reference\ngrep -v -f $CHRMSZ $OUTPUT.tab > $OUTPUT.filtered.tab\n# Convert to forward/reverse Bedgraph tracks\nsed '1d;2d' $OUTPUT.scaled.tab | awk '{OFS=\"\\t\"}{FS=\"\\t\"}{print $1, $2, $2+1, $3}' |sort -k1,1 -k2,2n > $OUTPUT.forward.bedgraph\nsed '1d;2d' $OUTPUT.scaled.tab | awk '{OFS=\"\\t\"}{FS=\"\\t\"}{print $1, $2, $2+1, $4}' |sort -k1,1 -k2,2n > $OUTPUT.reverse.bedgraph\n# Compress to BigWig format\n$BGTOBW $OUTPUT.forward.bedgraph $CHRMSZ $OUTPUT\\_forward.bw\n$BGTOBW $OUTPUT.reverse.bedgraph $CHRMSZ $OUTPUT\\_reverse.bw\n\n# Clean-up\nrm $OUTPUT.tab $OUTPUT.filtered.tab $OUTPUT.forward.bedgraph $OUTPUT.reverse.bedgraph\n\n# Output files:\n#  - /path/to/S_output-basename_s5e20F1.gff\n#  - /path/to/D_output-basename_s5e20F1.txt\n#  - /path/to/O_output-basename_s5e20F1.txt\n#  - /path/to/P_output-basename_s5e20F1.pdf\n#  - /path/to/F_output-basename_s5e20F1.pdf\n#  - /path/to/my-track-basename_forward.bw (optional)\n#  - /path/to/my-track-basename_reverse.bw (optional)\n")))}y.isMDXComponent=!0},9945:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/IGV_BrowserShot-1ff8f8b15497181fcb1800cc6fc746f5.png"},3196:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/LinuxOpenSM-1fe13f9ab9c369dd24c0a67c7ee86f41.png"},9755:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/MacOpenSM-5f0508d59e500792ea199946818706f1.png"},3009:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/WindowsOpenSM-ac32d3855e9f0cf632ab34c5c9fc983d.png"},1023:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/cwpair_output_F-c501742fbd4e57bb343929f5f1089355.png"},1353:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/cwpair_output_P-235620bace82f24c7e465084158830d1.png"},7781:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/download-yep-home-f975840806150a454e5ec6533fd7fd53.png"},584:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/download-yep-reb1-metadata-ab2aeca9e2417d0c313723d71a34d85b.png"},6048:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/download-yep-reb1-3dd6db352f8dab08f27e1cad8092367f.png"},4496:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/genetrack_output-97fc98d9d00e6e8454cbae460ddb1825.png"},4939:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/gui-bamidx-complete-e925a25e686f6c6813848dd104f8cfd5.png"},8135:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/gui-bamidx-aa4e45d9e6ea63a6f3bb4a921bfd1ad5.png"},9328:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/gui-bamtoscidx-output-ee4852e4db0dbbcab067e03bfe1f8537.png"},8432:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/gui-bamtoscidx-ad3c2db72cce5b6733b0e39637c7a997.png"},8928:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/maingui-bamidx-916174344aa9670cd3fe1bb3f0287a74.png"},975:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/maingui-bamtoscidx-673594bf8e06d0b7074206cda67ec2fb.png"}}]);