"use strict";(self.webpackChunklabtutorial=self.webpackChunklabtutorial||[]).push([[839],{5680:(e,t,a)=>{a.d(t,{xA:()=>g,yg:()=>d});var r=a(6540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},g=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},y="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,g=i(e,["components","mdxType","originalType","parentName"]),y=p(a),u=n,d=y["".concat(s,".").concat(u)]||y[u]||c[u]||l;return a?r.createElement(d,o(o({ref:t},g),{},{components:a})):r.createElement(d,o({ref:t},g))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[y]="string"==typeof e?e:n,o[1]=i;for(var p=2;p<l;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},1076:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var r=a(8168),n=(a(6540),a(5680));const l={id:"galaxy",title:"Galaxy Resources",sidebar_label:"Galaxy Resources",sidebar_position:7},o=void 0,i={unversionedId:"Software/galaxy",id:"Software/galaxy",title:"Galaxy Resources",description:"Useful links and resources for navigating our Galaxy sysems.",source:"@site/docs/Software/galaxy.md",sourceDirName:"Software",slug:"/Software/galaxy",permalink:"/labtutorial/Software/galaxy",draft:!1,tags:[],version:"current",lastUpdatedBy:"owlang",lastUpdatedAt:1730477243,formattedLastUpdatedAt:"Nov 1, 2024",sidebarPosition:7,frontMatter:{id:"galaxy",title:"Galaxy Resources",sidebar_label:"Galaxy Resources",sidebar_position:7},sidebar:"softwareSidebar",previous:{title:"ChIP-exo Peak Calling",permalink:"/labtutorial/Software/peakcalling-tutorial"},next:{title:"Cornell's CAC server setup",permalink:"/labtutorial/Software/cac"}},s={},p=[{value:"Navigating of Galaxy-related repos",id:"navigating-of-galaxy-related-repos",level:2},{value:"Linkouts to Galaxy Training and Docs",id:"linkouts-to-galaxy-training-and-docs",level:2}],g={toc:p},y="wrapper";function c(e){let{components:t,...a}=e;return(0,n.yg)(y,(0,r.A)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("p",null,"Useful links and resources for navigating our Galaxy sysems."),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Server Names"),(0,n.yg)("th",{parentName:"tr",align:null}),(0,n.yg)("th",{parentName:"tr",align:null}))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"http://vesta.cac.cornell.edu/"},"vesta.cac.cornell.edu")),(0,n.yg)("td",{parentName:"tr",align:null},"PEGR"),(0,n.yg)("td",{parentName:"tr",align:null},"Production Server")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"http://hyperion.cac.cornell.edu/"},"hyperion.cac.cornell.edu")),(0,n.yg)("td",{parentName:"tr",align:null},"Galaxy"),(0,n.yg)("td",{parentName:"tr",align:null},"Production Server")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"http://hestia.cac.cornell.edu/"},"hestia.cac.cornell.edu")),(0,n.yg)("td",{parentName:"tr",align:null},"PEGR"),(0,n.yg)("td",{parentName:"tr",align:null},"Development Server")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"http://shrike.cac.cornell.edu/"},"shrike.cac.cornell.edu")),(0,n.yg)("td",{parentName:"tr",align:null},"Galaxy"),(0,n.yg)("td",{parentName:"tr",align:null},"Development Server")))),(0,n.yg)("admonition",{type:"danger"},(0,n.yg)("p",{parentName:"admonition"},"Please test your code on the development servers. Do not mess with the production servers!")),(0,n.yg)("h2",{id:"navigating-of-galaxy-related-repos"},"Navigating of Galaxy-related repos"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/EpiGenomicsCode/ansible-egcGalaxy"},"EpiGenomicsCode/ansible-egcGalaxy")," - Ansible-ized Galaxy server deployment (generally this is more of Will\u2019s problem than ours)",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"ephemeris_tools/workflows"),"  I believe is where we keep the official pipeline ",(0,n.yg)("inlineCode",{parentName:"li"},".ga")," files used in the lab core pipeline. You might see workflows scattered across these other repos but this should be the correct one."),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"ephemeris_tools/ephemeris_tools")," lists out tools for the core pipeline that we import from the ToolShed"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/CEGRcode/ChIP_general-galaxy_tools"},"CEGRcode/ChIP_general-galaxy_tools")," - Galaxy tools that we custom wrapped for the pipelines (ones that weren\u2019t already in the toolshed)"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/CEGRcode/pegr-galaxy_tools"},"CEGRcode/pegr-galaxy_tools")," - Galaxy tools (XML wrappers of python scripts) that communicate with PEGR by sending POST requests following the execution of a pipeline step so PEGR can display a status update (Green box) and any statistics or figures for the report"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/CEGRcode/scriptmanager"},"CEGRcode/scriptmanager")," - Under the ",(0,n.yg)("inlineCode",{parentName:"li"},"galaxy/wrappers")," directory you can find Galaxy wrappers for the various ScriptManager tools")),(0,n.yg)("h2",{id:"linkouts-to-galaxy-training-and-docs"},"Linkouts to Galaxy Training and Docs"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://training.galaxyproject.org/training-material/topics/admin/"},"Galaxy Server administration")," highlights:",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},'"Ansible" and "Galaxy Installation with Ansible"'),(0,n.yg)("li",{parentName:"ul"},'"Galaxy Tool Management with Ephemeris"')))))}c.isMDXComponent=!0}}]);